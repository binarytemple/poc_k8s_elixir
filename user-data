#!/usr/bin/env bash -v

set -e

echo "intended to be run on Amazon Linux 2 EC2 instances"

sudo yum -y update
sudo yum -y install htop tmux zsh amzn2-core git

cat <<END | sudo tee /root/.tmux.conf
set-option -g default-shell /bin/zsh
set -g default-terminal "screen-256color"
setw -g mode-keys vi
set -g status-keys vi
END


cat <<END | sudo tee /root/.zshrc
zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'r:|[._-]=** r:|=**'
zstyle :compinstall filename '/root/.zshrc'
autoload -Uz compinit
compinit
export EDITOR=vi
source <(kubectl completion zsh)
export KUBECONFIG=/etc/kubernetes/admin.conf
END

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=0
repo_gpgcheck=0
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF


cat <<END | sudo tee /etc/sudoers.d/include-local
Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin
END

export KUBECONFIG=/etc/kubernetes/admin.conf

cat <<END | sudo tee /etc/environment
export KUBECONFIG=/etc/kubernetes/admin.conf
END


sudo modprobe overlay
sudo modprobe br_netfilter

# Setup required sysctl params, these persist across reboots.
cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF

sudo sysctl --system


sudo yum -y update 

sudo yum -y install kubeadm kubectl kubelet docker


sudo su -l -c "curl -L https://git.io/get_helm.sh | bash"
sudo curl -L git.io/weave -o /usr/local/bin/weave
sudo chmod a+x /usr/local/bin/weave

echo 1 | sudo  tee  /proc/sys/net/ipv4/ip_forward

sudo systemctl enable docker.service
sudo systemctl start docker.service

sudo systemctl enable kubelet.service
sudo systemctl start kubelet.service

sudo kubeadm init


sudo kubectl cluster-info
sudo kubectl get svc
sudo kubectl config current-context

git clone https://github.com/bryanhuntesl/poc_k8s_elixir.git


